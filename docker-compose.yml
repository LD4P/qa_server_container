# rails _5.2.4.3_ new .qa_server_app --database=mysql
# rm .qa_server_app/config/database.yml # use ENV for database configuration
# docker-compose build
# docker-compose up app
version: '3.2'
services:
  app: &app
    build:
      context: .
    image: ld4p/qa_server:v1
    container_name: ld4p-qa_server-app
    stdin_open: true
    tty: true
    user: root
    env_file:
      - .env
    volumes:
#      - .:/app/ld4p/qa_server-webapp # use for debugging
      - app_src:/app/ld4p/qa_server-webapp # use when not debugging
#      - ${AUTHORITIES_PATH}:/app/ld4p/qa_server-webapp/config/authorities # use to setup path to authorities outside app
      - authorities:/app/ld4p/qa_server-webapp/config/authorities # use for commits with to allow cci to run
      - rails-public:/app/ld4p/qa_server-webapp/public
      - rails-tmp:/app/ld4p/qa_server-webapp/tmp
      - gems:/usr/local/bundle
    ports:
      - "3000:3000"
    depends_on:
      - mysql

  mysql:
    image: mariadb
    restart: always
    container_name: ld4p-qa_server-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_RAILS_ROOT_PW}
      - MYSQL_DATABASE=${DATABASE_NAME_PREFIX}_development
      - MYSQL_USER=${DATABASE_RAILS_USER}
      - MYSQL_PASSWORD=${DATABASE_RAILS_USER_PW}
    ports:
      - "${DATABASE_PORT}:3306"
    volumes:
      - db-mysql-data:/var/lib/mysql/data

volumes:
  app_src: # comment out when debugging and using . volume for qa_server-webapp
  authorities: # comment out when running locally
  db-mysql-data:
  gems:
  rails-public:
  rails-tmp:
