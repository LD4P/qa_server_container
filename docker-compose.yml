# rails _5.2.4.3_ new .qa_server_app --database=mysql
# rm .qa_server_app/config/database.yml # use ENV for database configuration
# docker-compose build
# docker-compose up app
version: '3.5'
services:
  app: &app
    build:
      context: .
#      target: ld4p/qa_server
    image: ld4p/qa_server:v1
    container_name: ld4p-qa_server-app
    stdin_open: true
    tty: true
    user: root
    env_file:
      - .env
#    command: ["rails", "server", "--pid=/tmp/server.pid"]
#    environment:
#      - POSTGRES_HOST=pg
#      - POSTGRES_USER=db_user
#      - POSTGRES_PASSWORD=Eureka
#      - RAILS_ENV
#      args:
#        RAILS_ENV: development
#        BUNDLE_WITHOUT: test
    volumes:
      - .:/app/ld4p/qa_server-webapp # use for debugging
#      - app_src:/app/ld4p/qa_server-webapp # use when not debugging
      - rails-public:/app/ld4p/qa_server-webapp/public
      - rails-tmp:/app/ld4p/qa_server-webapp/tmp
      - gems:/usr/local/bundle
    ports:
      - "3000:3000"
    depends_on:
      - postgres

  db_migrate:
    image: ld4p/qa_server:v1
    user: root
    env_file:
      - .env
    entrypoint: ["sh", "-c"]
    command: db-migrate-seed.sh
    depends_on:
      - postgres
    volumes:
      - .:/app/ld4p/qa_server-webapp # use for debugging
#      - app_src:/app/ld4p/qa_server-webapp # use when not debugging
      - rails-public:/app/ld4p/qa_server-webapp/public
      - rails-tmp:/app/ld4p/qa_server-webapp/tmp

  postgres:
    image: postgres:10.6-alpine
    restart: always
    container_name: ld4p-qa_server-postgres
    environment:
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=Ureka
      - POSTGRES_DB=qa_server
      - POSTGRES_HOST_AUTH_METHOD=trust
    #    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

volumes:
  db-data:
  gems:
  rails-public:
  rails-tmp:
#  app_src:
