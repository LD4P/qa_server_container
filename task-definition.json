# Prerequisites:
# This task definition assumes that you have built the qa-server container image and
# uploaded it to your ECR repo. It also requires a S3 bucket containing the .env file
# and a EFS filesystem with four separate access points for the container volumes.

# This task definition template requires the following variable substitutions
# that must be done manually before this file can be used:
# <taskname> = the name of this task definition
# <taskversion> = the version number of the task definition
# <containername. = the name of the qa-server app container in your image repo
# <accountid> = your AWS account number
# <bucketname> = the S3 bucket containing the environment file
# <envfile> = the environment file name, must end in .env
# <efs-filesystem> = the EFS filesystem id
# <efs-accesspoint-x> = the EFS filesystem access point id for each volume


{
  "ipcMode": null,
  "executionRoleArn": "arn:aws:iam::<accountid>:role/ecsTaskExecutionRole",
  "containerDefinitions": [
    {
      "dnsSearchDomains": null,
      "environmentFiles": [
        {
          "value": "arn:aws:s3:::<bucketname>/<envfile>.env",
          "type": "s3"
        }
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "secretOptions": null,
        "options": {
          "awslogs-group": "/ecs/<taskname>",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "ecs"
        }
      },
      "entryPoint": null,
      "portMappings": [
        {
          "hostPort": 3306,
          "protocol": "tcp",
          "containerPort": 3306
        }
      ],
      "command": null,
      "linuxParameters": null,
      "cpu": 0,
      "environment": [],
      "resourceRequirements": null,
      "ulimits": null,
      "dnsServers": null,
      "mountPoints": [
        {
          "readOnly": null,
          "containerPath": "/var/lib/mysql/data",
          "sourceVolume": "db-mysql-data"
        }
      ],
      "workingDirectory": null,
      "secrets": null,
      "dockerSecurityOptions": null,
      "memory": null,
      "memoryReservation": 512,
      "volumesFrom": [],
      "stopTimeout": null,
      "image": "mariadb:latest",
      "startTimeout": null,
      "firelensConfiguration": null,
      "dependsOn": null,
      "disableNetworking": null,
      "interactive": null,
      "healthCheck": null,
      "essential": true,
      "links": null,
      "hostname": null,
      "extraHosts": null,
      "pseudoTerminal": null,
      "user": null,
      "readonlyRootFilesystem": null,
      "dockerLabels": null,
      "systemControls": null,
      "privileged": null,
      "name": "qa-mariadb"
    },
    {
      "dnsSearchDomains": null,
      "environmentFiles": [
        {
          "value": "arn:aws:s3:::<bucketname>/<envfile>.env",
          "type": "s3"
        }
      ],
      "logConfiguration": {
        "logDriver": "awslogs",
        "secretOptions": null,
        "options": {
          "awslogs-group": "/ecs/<taskname>",
          "awslogs-region": "us-east-1",
          "awslogs-stream-prefix": "ecs"
        }
      },
      "entryPoint": null,
      "portMappings": [
        {
          "hostPort": 3000,
          "protocol": "tcp",
          "containerPort": 3000
        }
      ],
      "command": null,
      "linuxParameters": null,
      "cpu": 0,
      "environment": [],
      "resourceRequirements": null,
      "ulimits": null,
      "dnsServers": null,
      "mountPoints": [
        {
          "readOnly": null,
          "containerPath": "/app/ld4p/qa_server-webapp/config/authorities",
          "sourceVolume": "qa-server-authorities"
        }
      ],
      "workingDirectory": null,
      "secrets": null,
      "dockerSecurityOptions": null,
      "memory": null,
      "memoryReservation": 512,
      "volumesFrom": [],
      "stopTimeout": null,
      "image": "<accountid>.dkr.ecr.us-east-1.amazonaws.com/<containername>:latest",
      "startTimeout": null,
      "firelensConfiguration": null,
      "dependsOn": null,
      "disableNetworking": null,
      "interactive": null,
      "healthCheck": null,
      "essential": true,
      "links": [
        "qa-mariadb:qa-mariadb"
      ],
      "hostname": null,
      "extraHosts": null,
      "pseudoTerminal": null,
      "user": null,
      "readonlyRootFilesystem": null,
      "dockerLabels": null,
      "systemControls": null,
      "privileged": null,
      "name": "<containername>"
    }
  ],
  "placementConstraints": [],
  "memory": "1024",
  "taskRoleArn": "arn:aws:iam::<accountid>:role/ecsTaskExecutionRole",
  "compatibilities": [
    "EC2"
  ],
  "taskDefinitionArn": "arn:aws:ecs:us-east-1:<accountid>:task-definition/<taskname>:<taskversion>",
  "family": "<taskname>",
  "pidMode": null,
  "requiresCompatibilities": [
    "EC2"
  ],
  "networkMode": "bridge",
  "cpu": "1024",
  "revision": <taskversion>,
  "status": "ACTIVE",
  "inferenceAccelerators": null,
  "proxyConfiguration": null,
  "volumes": [
    {
      "fsxWindowsFileServerVolumeConfiguration": null,
      "efsVolumeConfiguration": {
        "transitEncryptionPort": null,
        "fileSystemId": "<efs-filesystem>",
        "authorizationConfig": {
          "iam": "DISABLED",
          "accessPointId": "<efs-accesspoint-1>"
        },
        "transitEncryption": "ENABLED",
        "rootDirectory": "/"
      },
      "name": "db-mysql-data",
      "host": null,
      "dockerVolumeConfiguration": null
    },
    {
      "fsxWindowsFileServerVolumeConfiguration": null,
      "efsVolumeConfiguration": {
        "transitEncryptionPort": null,
        "fileSystemId": "<efs-filesystem>",
        "authorizationConfig": {
          "iam": "DISABLED",
          "accessPointId": "<efs-accesspoint-2>"
        },
        "transitEncryption": "ENABLED",
        "rootDirectory": "/"
      },
      "name": "qa-server-authorities",
      "host": null,
      "dockerVolumeConfiguration": null
    }
  ]
}